openapi: 3.0.0
info:
  description: This is a sample some LoanApplication aggregator
  title: Swagger loan application aggregator service - OpenAPI 3.0
  version: 1.0.0
servers:
- url: https://localhost:8081/api/v1
tags:
- description: API for aggregating and redirecting loan application
  name: loan application aggregator
paths:
  /loan_applications:
    get:
      description: get all loan applications
      operationId: LoanApplications
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LoanApplication'
                type: array
          description: successful operation
        "500":
          description: internal server error
      summary: get all loan applications
      tags:
      - loan_applications
    post:
      description: adding new client application
      operationId: CreateLoanApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanApplication'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanApplication'
          description: successful operation
        "400":
          description: invalid data
      summary: create client loan application from site
      tags:
      - loan_applications
  /loan_applications/{uuid}:
    delete:
      description: Delete loan application by uuid
      operationId: DeleteLoanApplicationByUUID
      parameters:
      - description: Loan application uuid for delete
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: loan application deleted successfully
        "404":
          description: loan application not found
        "500":
          description: Internal server error
      summary: delete loan application
      tags:
      - loan_applications
    get:
      description: get loan application data by uuid
      operationId: GetLoanApplicationByUUID
      parameters:
      - description: config uuid
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanApplication'
          description: config was found successfully
        "404":
          description: config not found
      summary: get loan application's data
      tags:
      - loan_applications
    patch:
      description: Updates loan application data by uuid
      operationId: EditLoanApplicaitionByUUID
      parameters:
      - description: Loan application uuid for update
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanApplication'
        description: loan application object that needs to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanApplication'
          description: loan application updated successfully
        "400":
          description: invalid uuid or loan application data supplied
        "404":
          description: loan application not found
        "500":
          description: internal server error
      summary: update loan application information
      tags:
      - loan_applications
  /organizations:
    get:
      description: get all organizations
      operationId: Organizations
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Organization'
                type: array
          description: successful operation
        "500":
          description: internal server error
      summary: get all organizations
      tags:
      - organizations
    post:
      description: adding new organization
      operationId: CreateOrganizationByUUID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: successful operation
        "400":
          description: invalid data
      summary: create new organization
      tags:
      - organizations
  /organizations/{uuid}:
    delete:
      description: Delete organization by uuid
      operationId: DeleteOrganizationByUUID
      parameters:
      - description: uuid organization for delete
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: organization deleted successfully
        "400":
          description: invalid organization uuid
        "404":
          description: organization not found
      summary: delete organization
      tags:
      - organizations
    get:
      description: get organization data by uuid
      operationId: GetOrganizationByUUID
      parameters:
      - description: uuid organization for delete
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: organization was found successfully
        "404":
          description: organization not found
      summary: get organization data
      tags:
      - organizations
    patch:
      description: Updates organization data by uuid
      operationId: EditOrganizationByUUID
      parameters:
      - description: uuid organization for update
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
        description: organization object that needs to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: organization updated successfully
        "400":
          description: invalid uuid or organization data supplied
        "404":
          description: organization not found
        "500":
          description: internal server error
      summary: update organization information
      tags:
      - organizations
  /configs:
    get:
      description: get all configs
      operationId: GetConfigs
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Config'
                type: array
          description: configs was getting successfully
        "404":
          description: configs not found
        "500":
          description: internal server error
      summary: get configs
      tags:
      - config
    post:
      description: adding new config
      operationId: CreateOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Config'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
          description: successful operation
        "400":
          description: Invalid data
      summary: create new config
      tags:
      - config
  /configs/{uuid}:
    delete:
      description: Delete config data by config uuid
      operationId: DeleteConfigByUUID
      parameters:
      - description: config uuid
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: config deleted successfully
        "404":
          description: config not found
        "500":
          description: internal sever error
      summary: Delete config data
      tags:
      - config
    get:
      description: get config data by config uuid
      operationId: GetConfigByUUID
      parameters:
      - description: config uuid
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
          description: config was found successfully
        "404":
          description: config not found
        "500":
          description: internal server error
      summary: get config data
      tags:
      - config
    patch:
      description: Updates config data by uuid
      operationId: EditConfigByUUID
      parameters:
      - description: uuid config for update
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Config'
        description: config object that needs to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
          description: config updated successfully
        "400":
          description: invalid uuid or config data supplied
        "404":
          description: config not found
        "500":
          description: internal server error
      summary: update config information
      tags:
      - config
  /configs/organizations/{uuid}:
    delete:
      description: Delete config data by organization uuid
      operationId: DeleteConfigByOrganizationUUID
      parameters:
      - description: config uuid
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: config deleted successfully
        "404":
          description: config not found
        "500":
          description: internal server error
      summary: Delete organization's config data
      tags:
      - config
    get:
      description: get config data by organization uuid
      operationId: GetConfigByOrganizationUUID
      parameters:
      - description: organization uuid
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
          description: config was found successfully
        "404":
          description: config not found
      summary: get organization's config data
      tags:
      - config
    patch:
      description: Updates config data by organization uuid
      operationId: EditConfigByOrganizationUUID
      parameters:
      - description: uuid organization for update data
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Config'
        description: config object that needs to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
          description: config updated successfully
        "400":
          description: invalid organization uuid or config data supplied
        "404":
          description: config not found
        "500":
          description: internal server error
      summary: update organization's config information
      tags:
      - config
components:
  schemas:
    LoanApplication:
      example:
        phone: "79994000101"
        incoming_organization_uuid: 1111-1111-1111-1111-1111
        uuid: 1111-1111-1111-1111-1112
        value: 10000
      properties:
        uuid:
          example: 1111-1111-1111-1111-1112
          type: string
        value:
          example: 10000
          type: integer
        phone:
          example: "79994000101"
          type: string
        incoming_organization_uuid:
          example: 1111-1111-1111-1111-1111
          type: string
      required:
      - incoming_organization_uuid
      - phone
      - value
      type: object
    Organization:
      example:
        name: kassa_one
        uuid: 1111-1111-1111-1111-1111
      properties:
        uuid:
          example: 1111-1111-1111-1111-1111
          type: string
        name:
          example: kassa_one
          type: string
      required:
      - name
      type: object
    Config:
      example:
        is_avaliable: true
        updated_at: updated_at
        max_loan_amount: 20000
        organization_uuid: 1111-1111-1111-1111-1111
        new_client: true
        created_at: 2025-06-24T07:48:39.676668+05:00
        loan_available: true
      properties:
        organization_uuid:
          example: 1111-1111-1111-1111-1111
          type: string
        max_loan_amount:
          example: 20000
          type: integer
        new_client:
          example: true
          type: boolean
        loan_available:
          example: true
          type: boolean
        created_at:
          example: 2025-06-24T07:48:39.676668+05:00
          type: string
        updated_at:
          type: string
          example: null
        is_avaliable:
          example: true
          type: boolean
      required:
      - loan_available
      - max_loan_amount
      - new_client
      - organization_uuid
      type: object
